// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViamaticaAPI.DATA;

#nullable disable

namespace ViamaticaAPI.Migrations
{
    [DbContext(typeof(ViaMaticaDbContext))]
    [Migration("20240311163856_SegundaMigracion")]
    partial class SegundaMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ViamaticaAPI.MODELS.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PostID");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Nombre = "Viajes",
                            PostID = 1
                        },
                        new
                        {
                            ID = 2,
                            Nombre = "Tecnología",
                            PostID = 2
                        },
                        new
                        {
                            ID = 3,
                            Nombre = "Salud y bienestar",
                            PostID = 3
                        },
                        new
                        {
                            ID = 4,
                            Nombre = "Moda y estilo",
                            PostID = 4
                        },
                        new
                        {
                            ID = 5,
                            Nombre = "Alimentación y nutrición",
                            PostID = 5
                        },
                        new
                        {
                            ID = 6,
                            Nombre = "Arte y cultura",
                            PostID = 6
                        },
                        new
                        {
                            ID = 7,
                            Nombre = "Finanzas personales",
                            PostID = 7
                        },
                        new
                        {
                            ID = 8,
                            Nombre = "Educación y aprendizaje",
                            PostID = 8
                        },
                        new
                        {
                            ID = 9,
                            Nombre = "Entretenimiento",
                            PostID = 9
                        },
                        new
                        {
                            ID = 10,
                            Nombre = "Medio ambiente y sostenibilidad",
                            PostID = 10
                        });
                });

            modelBuilder.Entity("ViamaticaAPI.MODELS.Comentario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Comentarios");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Contenido = "Explorando las maravillas de la naturaleza: un viaje a través de la selva amazónica",
                            UsuarioID = 1
                        },
                        new
                        {
                            ID = 2,
                            Contenido = "Los secretos detrás de las mejores recetas de cocina italiana.",
                            UsuarioID = 2
                        },
                        new
                        {
                            ID = 3,
                            Contenido = "Consejos prácticos para mejorar tu productividad en el trabajo desde casa",
                            UsuarioID = 3
                        },
                        new
                        {
                            ID = 4,
                            Contenido = "Descubriendo los rincones más pintorescos de Europa: un recorrido por las calles empedradas de Praga",
                            UsuarioID = 4
                        },
                        new
                        {
                            ID = 5,
                            Contenido = "Cómo mantener un estilo de vida saludable: consejos simples para hacer ejercicio y comer bien",
                            UsuarioID = 5
                        },
                        new
                        {
                            ID = 6,
                            Contenido = "Las últimas tendencias en moda primavera-verano: looks imprescindibles para esta temporada",
                            UsuarioID = 6
                        },
                        new
                        {
                            ID = 7,
                            Contenido = "10 destinos exóticos para unas vacaciones inolvidables en el sudeste asiático.",
                            UsuarioID = 7
                        },
                        new
                        {
                            ID = 8,
                            Contenido = "Aprende a tocar la guitarra: consejos para principiantes y recursos útiles",
                            UsuarioID = 8
                        },
                        new
                        {
                            ID = 9,
                            Contenido = "El arte de la fotografía: capturando momentos y creando recuerdos para toda la vida",
                            UsuarioID = 9
                        },
                        new
                        {
                            ID = 10,
                            Contenido = "La importancia de la educación financiera: cómo gestionar tus finanzas personales y planificar tu futuro.",
                            UsuarioID = 10
                        });
                });

            modelBuilder.Entity("ViamaticaAPI.MODELS.Post", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ComentarioId")
                        .HasColumnType("int");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Título")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ComentarioId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ComentarioId = 1,
                            Contenido = "Desde la automatización de tareas hasta la atención médica personalizada, la inteligencia artificial está transformando la forma en que vivimos y trabajamos. Exploraremos sus aplicaciones actuales y su potencial futuro.",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(179),
                            Título = "El impacto de la inteligencia artificial en la sociedad moderna"
                        },
                        new
                        {
                            ID = 2,
                            ComentarioId = 2,
                            Contenido = "Descubre cómo reducir tu huella de carbono y vivir de manera más eco-friendly con pequeños cambios en tu día a día, desde la elección de productos hasta la gestión de residuos",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(182),
                            Título = "Consejos para mantener un estilo de vida sustentable"
                        },
                        new
                        {
                            ID = 3,
                            ComentarioId = 3,
                            Contenido = "Exploraremos los beneficios de la meditación para la salud mental y emocional, así como técnicas simples para incorporar la meditación a tu rutina diaria y encontrar paz interior",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(184),
                            Título = "El poder de la meditación: cómo encontrar calma en un mundo agitado"
                        },
                        new
                        {
                            ID = 4,
                            ComentarioId = 4,
                            Contenido = "Analizaremos cómo fomentar un entorno laboral inclusivo que valore la diversidad y la equidad, y los beneficios que esto puede aportar tanto a los empleados como a la organización en general",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(186),
                            Título = "La importancia del liderazgo inclusivo en el lugar de trabajo"
                        },
                        new
                        {
                            ID = 5,
                            ComentarioId = 5,
                            Contenido = "Descubre estrategias para planificar viajes económicos, desde encontrar vuelos baratos hasta hospedarte en alojamientos asequibles y disfrutar de experiencias locales sin romper el banco",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(187),
                            Título = "Viajando con un presupuesto limitado: consejos para explorar el mundo sin gastar una fortuna"
                        },
                        new
                        {
                            ID = 6,
                            ComentarioId = 6,
                            Contenido = "En un mundo cada vez más digital, examinaremos cómo el trabajo remoto está redefiniendo la forma en que las empresas operan y cómo los profesionales pueden adaptarse y prosperar en este nuevo entorno laboral",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(189),
                            Título = "El futuro del trabajo remoto: desafíos y oportunidades"
                        },
                        new
                        {
                            ID = 7,
                            ComentarioId = 7,
                            Contenido = "Desmitificaremos algunas creencias comunes sobre la nutrición y ofreceremos consejos respaldados por la ciencia para una alimentación equilibrada que promueva la salud y el bienestar",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(191),
                            Título = "Los secretos de una alimentación saludable: mitos y realidades"
                        },
                        new
                        {
                            ID = 8,
                            ComentarioId = 8,
                            Contenido = "Desde los planetas del sistema solar hasta las galaxias distantes, adéntrate en el fascinante mundo de la astronomía y descubre los secretos del cosmos",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(193),
                            Título = "Explorando los misterios del universo: viaje a través de la astronomía"
                        },
                        new
                        {
                            ID = 9,
                            ComentarioId = 9,
                            Contenido = "Aprende técnicas y ejercicios prácticos para superar el bloqueo del escritor, desarrollar personajes convincentes y construir tramas emocionantes en tus historias",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(194),
                            Título = "El arte de la escritura creativa: consejos para desbloquear tu creatividad"
                        },
                        new
                        {
                            ID = 10,
                            ComentarioId = 10,
                            Contenido = "Desde la selección de plantas adecuadas hasta la planificación del espacio y el cuidado diario, te guiaremos en la creación de un hermoso jardín en tu hogar urbano, incluso si tienes poco espacio disponible.",
                            FechaPublicacion = new DateTime(2024, 3, 11, 11, 38, 56, 455, DateTimeKind.Local).AddTicks(196),
                            Título = "Cómo cultivar un jardín urbano: guía paso a paso para principiantes"
                        });
                });

            modelBuilder.Entity("ViamaticaAPI.MODELS.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InicioSesion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            ID = 5,
                            Contraseña = "contraseña123",
                            Correo = "ana_garcia@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9953),
                            Nombre = "Ana García"
                        },
                        new
                        {
                            ID = 6,
                            Contraseña = "456abcDEF",
                            Correo = "juan_martinez@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9969),
                            Nombre = "Juan Martínez"
                        },
                        new
                        {
                            ID = 7,
                            Contraseña = "qwerty789",
                            Correo = "maria_rodriguez@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9971),
                            Nombre = "María Rodríguez"
                        },
                        new
                        {
                            ID = 8,
                            Contraseña = "asdfg12345",
                            Correo = "luis_hernandez@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9973),
                            Nombre = "Luis Hernández"
                        },
                        new
                        {
                            ID = 9,
                            Contraseña = "12345678",
                            Correo = "laura_perez@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9974),
                            Nombre = "Laura Pérez"
                        },
                        new
                        {
                            ID = 10,
                            Contraseña = "password",
                            Correo = "carlos_sanchez@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9976),
                            Nombre = "Carlos Sánchez"
                        },
                        new
                        {
                            ID = 11,
                            Contraseña = "abcd1234",
                            Correo = "andrea_lopez@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9978),
                            Nombre = "Andrea López"
                        },
                        new
                        {
                            ID = 12,
                            Contraseña = "ilovecoding",
                            Correo = "david_gomez@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9979),
                            Nombre = "David Gómez"
                        },
                        new
                        {
                            ID = 13,
                            Contraseña = "987654321",
                            Correo = "paula_diaz@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9981),
                            Nombre = "Paula Díaz"
                        },
                        new
                        {
                            ID = 14,
                            Contraseña = "securepassword",
                            Correo = "javier_fernandez@example.com",
                            InicioSesion = new DateTime(2024, 3, 11, 11, 38, 56, 454, DateTimeKind.Local).AddTicks(9983),
                            Nombre = "Javier Fernández"
                        });
                });

            modelBuilder.Entity("ViamaticaAPI.MODELS.Categoria", b =>
                {
                    b.HasOne("ViamaticaAPI.MODELS.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("ViamaticaAPI.MODELS.Comentario", b =>
                {
                    b.HasOne("ViamaticaAPI.MODELS.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ViamaticaAPI.MODELS.Post", b =>
                {
                    b.HasOne("ViamaticaAPI.MODELS.Comentario", "Comentario")
                        .WithMany()
                        .HasForeignKey("ComentarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comentario");
                });
#pragma warning restore 612, 618
        }
    }
}
